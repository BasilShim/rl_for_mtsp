{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ac213ee2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>АЗС №35400 Кичменгский Городок</th>\n",
       "      <th>АЗС №35401 Великий Устюг-1</th>\n",
       "      <th>АЗС №35402 Великий Устюг-2</th>\n",
       "      <th>АЗС №35403 Дунай</th>\n",
       "      <th>АЗС №35404 Нюксеница</th>\n",
       "      <th>АЗС №35405 Борисово-Судское</th>\n",
       "      <th>АЗС №35406 Журавлево</th>\n",
       "      <th>АЗС №35407 Грязовец-1</th>\n",
       "      <th>АЗС №35408 Грязовец-2</th>\n",
       "      <th>АЗС №35409 Савино</th>\n",
       "      <th>...</th>\n",
       "      <th>АЗС №35454 Октябрьский пр.-1 (Вологда)</th>\n",
       "      <th>АЗС №35455 Октябрьский пр.-2 (Вологда)</th>\n",
       "      <th>АЗС №35456 Маяковская</th>\n",
       "      <th>АЗС №35457 Краснодонцев</th>\n",
       "      <th>АЗС №35458 Северсталь</th>\n",
       "      <th>АЗС №35459 Олимпийская</th>\n",
       "      <th>АЗС №35460 Северное шоссе-1</th>\n",
       "      <th>АЗС №35461 Северное шоссе-2</th>\n",
       "      <th>АЗС № 35462 Аксеново</th>\n",
       "      <th>Нефтебаза</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0000</td>\n",
       "      <td>99.2272</td>\n",
       "      <td>101.8513</td>\n",
       "      <td>139.2135</td>\n",
       "      <td>154.2522</td>\n",
       "      <td>777.2635</td>\n",
       "      <td>102.4328</td>\n",
       "      <td>520.5020</td>\n",
       "      <td>517.8863</td>\n",
       "      <td>266.7014</td>\n",
       "      <td>...</td>\n",
       "      <td>610.3886</td>\n",
       "      <td>610.3028</td>\n",
       "      <td>607.3283</td>\n",
       "      <td>609.0579</td>\n",
       "      <td>611.0852</td>\n",
       "      <td>611.0605</td>\n",
       "      <td>604.2684</td>\n",
       "      <td>605.7555</td>\n",
       "      <td>502.9826</td>\n",
       "      <td>477.9325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>99.0684</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4.9465</td>\n",
       "      <td>134.5201</td>\n",
       "      <td>149.5589</td>\n",
       "      <td>748.0318</td>\n",
       "      <td>5.5280</td>\n",
       "      <td>491.2703</td>\n",
       "      <td>488.6546</td>\n",
       "      <td>241.7276</td>\n",
       "      <td>...</td>\n",
       "      <td>581.1570</td>\n",
       "      <td>581.0711</td>\n",
       "      <td>578.0967</td>\n",
       "      <td>579.8263</td>\n",
       "      <td>581.8535</td>\n",
       "      <td>581.8288</td>\n",
       "      <td>575.0368</td>\n",
       "      <td>576.5238</td>\n",
       "      <td>473.7510</td>\n",
       "      <td>448.7008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>101.8148</td>\n",
       "      <td>5.0688</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>137.2665</td>\n",
       "      <td>152.3053</td>\n",
       "      <td>750.7781</td>\n",
       "      <td>3.0302</td>\n",
       "      <td>494.0166</td>\n",
       "      <td>491.4010</td>\n",
       "      <td>244.4739</td>\n",
       "      <td>...</td>\n",
       "      <td>583.9033</td>\n",
       "      <td>583.8174</td>\n",
       "      <td>580.8430</td>\n",
       "      <td>582.5726</td>\n",
       "      <td>584.5999</td>\n",
       "      <td>584.5752</td>\n",
       "      <td>577.7831</td>\n",
       "      <td>579.2702</td>\n",
       "      <td>476.4973</td>\n",
       "      <td>451.4472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>139.2135</td>\n",
       "      <td>134.6791</td>\n",
       "      <td>137.3031</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>15.0961</td>\n",
       "      <td>613.5690</td>\n",
       "      <td>137.8846</td>\n",
       "      <td>356.8075</td>\n",
       "      <td>354.1918</td>\n",
       "      <td>107.2648</td>\n",
       "      <td>...</td>\n",
       "      <td>446.6942</td>\n",
       "      <td>446.6083</td>\n",
       "      <td>443.6339</td>\n",
       "      <td>445.3635</td>\n",
       "      <td>447.3908</td>\n",
       "      <td>447.3660</td>\n",
       "      <td>440.5740</td>\n",
       "      <td>442.0610</td>\n",
       "      <td>339.2882</td>\n",
       "      <td>314.2380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>154.2522</td>\n",
       "      <td>149.7178</td>\n",
       "      <td>152.3419</td>\n",
       "      <td>15.0961</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>613.8947</td>\n",
       "      <td>152.9234</td>\n",
       "      <td>357.1332</td>\n",
       "      <td>354.5176</td>\n",
       "      <td>107.5905</td>\n",
       "      <td>...</td>\n",
       "      <td>447.0199</td>\n",
       "      <td>446.9341</td>\n",
       "      <td>443.9596</td>\n",
       "      <td>445.6892</td>\n",
       "      <td>447.7165</td>\n",
       "      <td>447.6918</td>\n",
       "      <td>440.8997</td>\n",
       "      <td>442.3868</td>\n",
       "      <td>339.6139</td>\n",
       "      <td>314.5638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>611.7861</td>\n",
       "      <td>582.6174</td>\n",
       "      <td>585.2414</td>\n",
       "      <td>447.9957</td>\n",
       "      <td>448.3214</td>\n",
       "      <td>191.2351</td>\n",
       "      <td>585.8229</td>\n",
       "      <td>181.8523</td>\n",
       "      <td>179.2367</td>\n",
       "      <td>345.2112</td>\n",
       "      <td>...</td>\n",
       "      <td>10.1276</td>\n",
       "      <td>10.0417</td>\n",
       "      <td>7.2967</td>\n",
       "      <td>3.3719</td>\n",
       "      <td>10.8241</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6.1623</td>\n",
       "      <td>4.6720</td>\n",
       "      <td>107.2118</td>\n",
       "      <td>142.1894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>605.7962</td>\n",
       "      <td>576.6275</td>\n",
       "      <td>579.2515</td>\n",
       "      <td>442.0057</td>\n",
       "      <td>442.3315</td>\n",
       "      <td>185.0682</td>\n",
       "      <td>579.8330</td>\n",
       "      <td>175.8624</td>\n",
       "      <td>173.2467</td>\n",
       "      <td>339.2213</td>\n",
       "      <td>...</td>\n",
       "      <td>6.8726</td>\n",
       "      <td>6.7867</td>\n",
       "      <td>3.8122</td>\n",
       "      <td>4.8070</td>\n",
       "      <td>7.5691</td>\n",
       "      <td>6.8095</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.5045</td>\n",
       "      <td>101.2218</td>\n",
       "      <td>136.1995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>607.1467</td>\n",
       "      <td>577.9779</td>\n",
       "      <td>580.6020</td>\n",
       "      <td>443.3562</td>\n",
       "      <td>443.6820</td>\n",
       "      <td>186.4186</td>\n",
       "      <td>581.1835</td>\n",
       "      <td>177.2129</td>\n",
       "      <td>174.5972</td>\n",
       "      <td>340.5717</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2230</td>\n",
       "      <td>8.1372</td>\n",
       "      <td>5.1627</td>\n",
       "      <td>3.5396</td>\n",
       "      <td>8.9196</td>\n",
       "      <td>5.5422</td>\n",
       "      <td>1.5229</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>102.5723</td>\n",
       "      <td>137.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>504.6641</td>\n",
       "      <td>475.4954</td>\n",
       "      <td>478.1194</td>\n",
       "      <td>340.8736</td>\n",
       "      <td>341.1994</td>\n",
       "      <td>274.3706</td>\n",
       "      <td>478.7009</td>\n",
       "      <td>74.7303</td>\n",
       "      <td>72.1146</td>\n",
       "      <td>238.0892</td>\n",
       "      <td>...</td>\n",
       "      <td>107.4957</td>\n",
       "      <td>107.4099</td>\n",
       "      <td>104.4354</td>\n",
       "      <td>106.1650</td>\n",
       "      <td>108.1923</td>\n",
       "      <td>108.1676</td>\n",
       "      <td>101.3755</td>\n",
       "      <td>102.8626</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>35.0674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>477.9958</td>\n",
       "      <td>448.8271</td>\n",
       "      <td>451.4511</td>\n",
       "      <td>314.2054</td>\n",
       "      <td>314.5311</td>\n",
       "      <td>309.7443</td>\n",
       "      <td>452.0327</td>\n",
       "      <td>46.7818</td>\n",
       "      <td>44.1662</td>\n",
       "      <td>211.4209</td>\n",
       "      <td>...</td>\n",
       "      <td>142.8694</td>\n",
       "      <td>142.7836</td>\n",
       "      <td>139.8091</td>\n",
       "      <td>141.5387</td>\n",
       "      <td>143.5660</td>\n",
       "      <td>143.5413</td>\n",
       "      <td>136.7492</td>\n",
       "      <td>138.2363</td>\n",
       "      <td>35.4634</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64 rows × 64 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    АЗС №35400 Кичменгский Городок  АЗС №35401 Великий Устюг-1  \\\n",
       "0                           0.0000                     99.2272   \n",
       "1                          99.0684                      0.0000   \n",
       "2                         101.8148                      5.0688   \n",
       "3                         139.2135                    134.6791   \n",
       "4                         154.2522                    149.7178   \n",
       "..                             ...                         ...   \n",
       "59                        611.7861                    582.6174   \n",
       "60                        605.7962                    576.6275   \n",
       "61                        607.1467                    577.9779   \n",
       "62                        504.6641                    475.4954   \n",
       "63                        477.9958                    448.8271   \n",
       "\n",
       "    АЗС №35402 Великий Устюг-2  АЗС №35403 Дунай  АЗС №35404 Нюксеница  \\\n",
       "0                     101.8513          139.2135              154.2522   \n",
       "1                       4.9465          134.5201              149.5589   \n",
       "2                       0.0000          137.2665              152.3053   \n",
       "3                     137.3031            0.0000               15.0961   \n",
       "4                     152.3419           15.0961                0.0000   \n",
       "..                         ...               ...                   ...   \n",
       "59                    585.2414          447.9957              448.3214   \n",
       "60                    579.2515          442.0057              442.3315   \n",
       "61                    580.6020          443.3562              443.6820   \n",
       "62                    478.1194          340.8736              341.1994   \n",
       "63                    451.4511          314.2054              314.5311   \n",
       "\n",
       "    АЗС №35405 Борисово-Судское  АЗС №35406 Журавлево  АЗС №35407 Грязовец-1  \\\n",
       "0                      777.2635              102.4328               520.5020   \n",
       "1                      748.0318                5.5280               491.2703   \n",
       "2                      750.7781                3.0302               494.0166   \n",
       "3                      613.5690              137.8846               356.8075   \n",
       "4                      613.8947              152.9234               357.1332   \n",
       "..                          ...                   ...                    ...   \n",
       "59                     191.2351              585.8229               181.8523   \n",
       "60                     185.0682              579.8330               175.8624   \n",
       "61                     186.4186              581.1835               177.2129   \n",
       "62                     274.3706              478.7009                74.7303   \n",
       "63                     309.7443              452.0327                46.7818   \n",
       "\n",
       "    АЗС №35408 Грязовец-2  АЗС №35409 Савино  ...  \\\n",
       "0                517.8863           266.7014  ...   \n",
       "1                488.6546           241.7276  ...   \n",
       "2                491.4010           244.4739  ...   \n",
       "3                354.1918           107.2648  ...   \n",
       "4                354.5176           107.5905  ...   \n",
       "..                    ...                ...  ...   \n",
       "59               179.2367           345.2112  ...   \n",
       "60               173.2467           339.2213  ...   \n",
       "61               174.5972           340.5717  ...   \n",
       "62                72.1146           238.0892  ...   \n",
       "63                44.1662           211.4209  ...   \n",
       "\n",
       "    АЗС №35454 Октябрьский пр.-1 (Вологда)  \\\n",
       "0                                 610.3886   \n",
       "1                                 581.1570   \n",
       "2                                 583.9033   \n",
       "3                                 446.6942   \n",
       "4                                 447.0199   \n",
       "..                                     ...   \n",
       "59                                 10.1276   \n",
       "60                                  6.8726   \n",
       "61                                  8.2230   \n",
       "62                                107.4957   \n",
       "63                                142.8694   \n",
       "\n",
       "    АЗС №35455 Октябрьский пр.-2 (Вологда)  АЗС №35456 Маяковская  \\\n",
       "0                                 610.3028               607.3283   \n",
       "1                                 581.0711               578.0967   \n",
       "2                                 583.8174               580.8430   \n",
       "3                                 446.6083               443.6339   \n",
       "4                                 446.9341               443.9596   \n",
       "..                                     ...                    ...   \n",
       "59                                 10.0417                 7.2967   \n",
       "60                                  6.7867                 3.8122   \n",
       "61                                  8.1372                 5.1627   \n",
       "62                                107.4099               104.4354   \n",
       "63                                142.7836               139.8091   \n",
       "\n",
       "    АЗС №35457 Краснодонцев  АЗС №35458 Северсталь  АЗС №35459 Олимпийская  \\\n",
       "0                  609.0579               611.0852                611.0605   \n",
       "1                  579.8263               581.8535                581.8288   \n",
       "2                  582.5726               584.5999                584.5752   \n",
       "3                  445.3635               447.3908                447.3660   \n",
       "4                  445.6892               447.7165                447.6918   \n",
       "..                      ...                    ...                     ...   \n",
       "59                   3.3719                10.8241                  0.0000   \n",
       "60                   4.8070                 7.5691                  6.8095   \n",
       "61                   3.5396                 8.9196                  5.5422   \n",
       "62                 106.1650               108.1923                108.1676   \n",
       "63                 141.5387               143.5660                143.5413   \n",
       "\n",
       "    АЗС №35460 Северное шоссе-1  АЗС №35461 Северное шоссе-2  \\\n",
       "0                      604.2684                     605.7555   \n",
       "1                      575.0368                     576.5238   \n",
       "2                      577.7831                     579.2702   \n",
       "3                      440.5740                     442.0610   \n",
       "4                      440.8997                     442.3868   \n",
       "..                          ...                          ...   \n",
       "59                       6.1623                       4.6720   \n",
       "60                       0.0000                       1.5045   \n",
       "61                       1.5229                       0.0000   \n",
       "62                     101.3755                     102.8626   \n",
       "63                     136.7492                     138.2363   \n",
       "\n",
       "    АЗС № 35462 Аксеново  Нефтебаза  \n",
       "0               502.9826   477.9325  \n",
       "1               473.7510   448.7008  \n",
       "2               476.4973   451.4472  \n",
       "3               339.2882   314.2380  \n",
       "4               339.6139   314.5638  \n",
       "..                   ...        ...  \n",
       "59              107.2118   142.1894  \n",
       "60              101.2218   136.1995  \n",
       "61              102.5723   137.5500  \n",
       "62                0.0000    35.0674  \n",
       "63               35.4634     0.0000  \n",
       "\n",
       "[64 rows x 64 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np \n",
    "import gym\n",
    "import ray\n",
    "import ray.rllib.agents.ppo as ppo\n",
    "from ray import tune\n",
    "import pandas as pd\n",
    "import GPUtil\n",
    "\n",
    "from gym import Env, spaces\n",
    "\n",
    "pd.options.display.max_rows = 12\n",
    "\n",
    "#get a matrix of distances between locations\n",
    "df = pd.read_csv('dist_vologda_matrix.csv', sep=',')\n",
    "df = df.iloc[:, 1:]\n",
    "\n",
    "#some parameters\n",
    "working_hours = 12\n",
    "truck_speed = 60\n",
    "\n",
    "df = df / 1000\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2009142d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>АЗС №35403 Дунай</th>\n",
       "      <th>АЗС №35404 Нюксеница</th>\n",
       "      <th>АЗС №35405 Борисово-Судское</th>\n",
       "      <th>АЗС №35407 Грязовец-1</th>\n",
       "      <th>АЗС №35408 Грязовец-2</th>\n",
       "      <th>АЗС №35409 Савино</th>\n",
       "      <th>АЗС №35410 Сазоново-1</th>\n",
       "      <th>АЗС №35411 Сазоново-2</th>\n",
       "      <th>АЗС №35412 Вытегра</th>\n",
       "      <th>АЗС №35413 Липник</th>\n",
       "      <th>...</th>\n",
       "      <th>АЗС №35454 Октябрьский пр.-1 (Вологда)</th>\n",
       "      <th>АЗС №35455 Октябрьский пр.-2 (Вологда)</th>\n",
       "      <th>АЗС №35456 Маяковская</th>\n",
       "      <th>АЗС №35457 Краснодонцев</th>\n",
       "      <th>АЗС №35458 Северсталь</th>\n",
       "      <th>АЗС №35459 Олимпийская</th>\n",
       "      <th>АЗС №35460 Северное шоссе-1</th>\n",
       "      <th>АЗС №35461 Северное шоссе-2</th>\n",
       "      <th>АЗС № 35462 Аксеново</th>\n",
       "      <th>Нефтебаза</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0000</td>\n",
       "      <td>15.0961</td>\n",
       "      <td>613.5690</td>\n",
       "      <td>356.8075</td>\n",
       "      <td>354.1918</td>\n",
       "      <td>107.2648</td>\n",
       "      <td>619.0077</td>\n",
       "      <td>618.5201</td>\n",
       "      <td>629.3182</td>\n",
       "      <td>472.6696</td>\n",
       "      <td>...</td>\n",
       "      <td>446.6942</td>\n",
       "      <td>446.6083</td>\n",
       "      <td>443.6339</td>\n",
       "      <td>445.3635</td>\n",
       "      <td>447.3908</td>\n",
       "      <td>447.3660</td>\n",
       "      <td>440.5740</td>\n",
       "      <td>442.0610</td>\n",
       "      <td>339.2882</td>\n",
       "      <td>314.2380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.0961</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>613.8947</td>\n",
       "      <td>357.1332</td>\n",
       "      <td>354.5176</td>\n",
       "      <td>107.5905</td>\n",
       "      <td>619.3335</td>\n",
       "      <td>618.8458</td>\n",
       "      <td>629.6440</td>\n",
       "      <td>472.9954</td>\n",
       "      <td>...</td>\n",
       "      <td>447.0199</td>\n",
       "      <td>446.9341</td>\n",
       "      <td>443.9596</td>\n",
       "      <td>445.6892</td>\n",
       "      <td>447.7165</td>\n",
       "      <td>447.6918</td>\n",
       "      <td>440.8997</td>\n",
       "      <td>442.3868</td>\n",
       "      <td>339.6139</td>\n",
       "      <td>314.5638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>615.1980</td>\n",
       "      <td>615.5238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>349.0547</td>\n",
       "      <td>346.4390</td>\n",
       "      <td>512.4135</td>\n",
       "      <td>142.9597</td>\n",
       "      <td>142.4720</td>\n",
       "      <td>165.8965</td>\n",
       "      <td>193.2966</td>\n",
       "      <td>...</td>\n",
       "      <td>187.4480</td>\n",
       "      <td>187.3622</td>\n",
       "      <td>184.7850</td>\n",
       "      <td>188.3816</td>\n",
       "      <td>183.6881</td>\n",
       "      <td>191.1772</td>\n",
       "      <td>185.1426</td>\n",
       "      <td>186.6296</td>\n",
       "      <td>274.4141</td>\n",
       "      <td>309.3918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>356.1259</td>\n",
       "      <td>356.4516</td>\n",
       "      <td>349.7479</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>3.7018</td>\n",
       "      <td>253.3414</td>\n",
       "      <td>355.1867</td>\n",
       "      <td>354.6990</td>\n",
       "      <td>373.5276</td>\n",
       "      <td>216.8790</td>\n",
       "      <td>...</td>\n",
       "      <td>182.8731</td>\n",
       "      <td>182.7873</td>\n",
       "      <td>179.8128</td>\n",
       "      <td>181.5424</td>\n",
       "      <td>183.5697</td>\n",
       "      <td>183.5450</td>\n",
       "      <td>176.7529</td>\n",
       "      <td>178.2400</td>\n",
       "      <td>75.4671</td>\n",
       "      <td>45.6714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>353.5507</td>\n",
       "      <td>353.8764</td>\n",
       "      <td>347.1727</td>\n",
       "      <td>3.7422</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>250.7662</td>\n",
       "      <td>352.6115</td>\n",
       "      <td>352.1238</td>\n",
       "      <td>370.9524</td>\n",
       "      <td>214.3038</td>\n",
       "      <td>...</td>\n",
       "      <td>180.2979</td>\n",
       "      <td>180.2120</td>\n",
       "      <td>177.2376</td>\n",
       "      <td>178.9672</td>\n",
       "      <td>180.9945</td>\n",
       "      <td>180.9698</td>\n",
       "      <td>174.1777</td>\n",
       "      <td>175.6648</td>\n",
       "      <td>72.8919</td>\n",
       "      <td>43.0962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>447.9957</td>\n",
       "      <td>448.3214</td>\n",
       "      <td>191.2351</td>\n",
       "      <td>181.8523</td>\n",
       "      <td>179.2367</td>\n",
       "      <td>345.2112</td>\n",
       "      <td>196.6738</td>\n",
       "      <td>196.1861</td>\n",
       "      <td>332.9386</td>\n",
       "      <td>176.2900</td>\n",
       "      <td>...</td>\n",
       "      <td>10.1276</td>\n",
       "      <td>10.0417</td>\n",
       "      <td>7.2967</td>\n",
       "      <td>3.3719</td>\n",
       "      <td>10.8241</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6.1623</td>\n",
       "      <td>4.6720</td>\n",
       "      <td>107.2118</td>\n",
       "      <td>142.1894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>442.0057</td>\n",
       "      <td>442.3315</td>\n",
       "      <td>185.0682</td>\n",
       "      <td>175.8624</td>\n",
       "      <td>173.2467</td>\n",
       "      <td>339.2213</td>\n",
       "      <td>190.5069</td>\n",
       "      <td>190.0192</td>\n",
       "      <td>326.9487</td>\n",
       "      <td>170.3001</td>\n",
       "      <td>...</td>\n",
       "      <td>6.8726</td>\n",
       "      <td>6.7867</td>\n",
       "      <td>3.8122</td>\n",
       "      <td>4.8070</td>\n",
       "      <td>7.5691</td>\n",
       "      <td>6.8095</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.5045</td>\n",
       "      <td>101.2218</td>\n",
       "      <td>136.1995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>443.3562</td>\n",
       "      <td>443.6820</td>\n",
       "      <td>186.4186</td>\n",
       "      <td>177.2129</td>\n",
       "      <td>174.5972</td>\n",
       "      <td>340.5717</td>\n",
       "      <td>191.8574</td>\n",
       "      <td>191.3697</td>\n",
       "      <td>328.2991</td>\n",
       "      <td>171.6506</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2230</td>\n",
       "      <td>8.1372</td>\n",
       "      <td>5.1627</td>\n",
       "      <td>3.5396</td>\n",
       "      <td>8.9196</td>\n",
       "      <td>5.5422</td>\n",
       "      <td>1.5229</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>102.5723</td>\n",
       "      <td>137.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>340.8736</td>\n",
       "      <td>341.1994</td>\n",
       "      <td>274.3706</td>\n",
       "      <td>74.7303</td>\n",
       "      <td>72.1146</td>\n",
       "      <td>238.0892</td>\n",
       "      <td>279.8093</td>\n",
       "      <td>279.3216</td>\n",
       "      <td>346.5072</td>\n",
       "      <td>189.8586</td>\n",
       "      <td>...</td>\n",
       "      <td>107.4957</td>\n",
       "      <td>107.4099</td>\n",
       "      <td>104.4354</td>\n",
       "      <td>106.1650</td>\n",
       "      <td>108.1923</td>\n",
       "      <td>108.1676</td>\n",
       "      <td>101.3755</td>\n",
       "      <td>102.8626</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>35.0674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>314.2054</td>\n",
       "      <td>314.5311</td>\n",
       "      <td>309.7443</td>\n",
       "      <td>46.7818</td>\n",
       "      <td>44.1662</td>\n",
       "      <td>211.4209</td>\n",
       "      <td>315.1830</td>\n",
       "      <td>314.6953</td>\n",
       "      <td>329.8897</td>\n",
       "      <td>173.2411</td>\n",
       "      <td>...</td>\n",
       "      <td>142.8694</td>\n",
       "      <td>142.7836</td>\n",
       "      <td>139.8091</td>\n",
       "      <td>141.5387</td>\n",
       "      <td>143.5660</td>\n",
       "      <td>143.5413</td>\n",
       "      <td>136.7492</td>\n",
       "      <td>138.2363</td>\n",
       "      <td>35.4634</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>56 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    АЗС №35403 Дунай  АЗС №35404 Нюксеница  АЗС №35405 Борисово-Судское  \\\n",
       "0             0.0000               15.0961                     613.5690   \n",
       "1            15.0961                0.0000                     613.8947   \n",
       "2           615.1980              615.5238                       0.0000   \n",
       "3           356.1259              356.4516                     349.7479   \n",
       "4           353.5507              353.8764                     347.1727   \n",
       "..               ...                   ...                          ...   \n",
       "51          447.9957              448.3214                     191.2351   \n",
       "52          442.0057              442.3315                     185.0682   \n",
       "53          443.3562              443.6820                     186.4186   \n",
       "54          340.8736              341.1994                     274.3706   \n",
       "55          314.2054              314.5311                     309.7443   \n",
       "\n",
       "    АЗС №35407 Грязовец-1  АЗС №35408 Грязовец-2  АЗС №35409 Савино  \\\n",
       "0                356.8075               354.1918           107.2648   \n",
       "1                357.1332               354.5176           107.5905   \n",
       "2                349.0547               346.4390           512.4135   \n",
       "3                  0.0000                 3.7018           253.3414   \n",
       "4                  3.7422                 0.0000           250.7662   \n",
       "..                    ...                    ...                ...   \n",
       "51               181.8523               179.2367           345.2112   \n",
       "52               175.8624               173.2467           339.2213   \n",
       "53               177.2129               174.5972           340.5717   \n",
       "54                74.7303                72.1146           238.0892   \n",
       "55                46.7818                44.1662           211.4209   \n",
       "\n",
       "    АЗС №35410 Сазоново-1  АЗС №35411 Сазоново-2  АЗС №35412 Вытегра  \\\n",
       "0                619.0077               618.5201            629.3182   \n",
       "1                619.3335               618.8458            629.6440   \n",
       "2                142.9597               142.4720            165.8965   \n",
       "3                355.1867               354.6990            373.5276   \n",
       "4                352.6115               352.1238            370.9524   \n",
       "..                    ...                    ...                 ...   \n",
       "51               196.6738               196.1861            332.9386   \n",
       "52               190.5069               190.0192            326.9487   \n",
       "53               191.8574               191.3697            328.2991   \n",
       "54               279.8093               279.3216            346.5072   \n",
       "55               315.1830               314.6953            329.8897   \n",
       "\n",
       "    АЗС №35413 Липник  ...  АЗС №35454 Октябрьский пр.-1 (Вологда)  \\\n",
       "0            472.6696  ...                                446.6942   \n",
       "1            472.9954  ...                                447.0199   \n",
       "2            193.2966  ...                                187.4480   \n",
       "3            216.8790  ...                                182.8731   \n",
       "4            214.3038  ...                                180.2979   \n",
       "..                ...  ...                                     ...   \n",
       "51           176.2900  ...                                 10.1276   \n",
       "52           170.3001  ...                                  6.8726   \n",
       "53           171.6506  ...                                  8.2230   \n",
       "54           189.8586  ...                                107.4957   \n",
       "55           173.2411  ...                                142.8694   \n",
       "\n",
       "    АЗС №35455 Октябрьский пр.-2 (Вологда)  АЗС №35456 Маяковская  \\\n",
       "0                                 446.6083               443.6339   \n",
       "1                                 446.9341               443.9596   \n",
       "2                                 187.3622               184.7850   \n",
       "3                                 182.7873               179.8128   \n",
       "4                                 180.2120               177.2376   \n",
       "..                                     ...                    ...   \n",
       "51                                 10.0417                 7.2967   \n",
       "52                                  6.7867                 3.8122   \n",
       "53                                  8.1372                 5.1627   \n",
       "54                                107.4099               104.4354   \n",
       "55                                142.7836               139.8091   \n",
       "\n",
       "    АЗС №35457 Краснодонцев  АЗС №35458 Северсталь  АЗС №35459 Олимпийская  \\\n",
       "0                  445.3635               447.3908                447.3660   \n",
       "1                  445.6892               447.7165                447.6918   \n",
       "2                  188.3816               183.6881                191.1772   \n",
       "3                  181.5424               183.5697                183.5450   \n",
       "4                  178.9672               180.9945                180.9698   \n",
       "..                      ...                    ...                     ...   \n",
       "51                   3.3719                10.8241                  0.0000   \n",
       "52                   4.8070                 7.5691                  6.8095   \n",
       "53                   3.5396                 8.9196                  5.5422   \n",
       "54                 106.1650               108.1923                108.1676   \n",
       "55                 141.5387               143.5660                143.5413   \n",
       "\n",
       "    АЗС №35460 Северное шоссе-1  АЗС №35461 Северное шоссе-2  \\\n",
       "0                      440.5740                     442.0610   \n",
       "1                      440.8997                     442.3868   \n",
       "2                      185.1426                     186.6296   \n",
       "3                      176.7529                     178.2400   \n",
       "4                      174.1777                     175.6648   \n",
       "..                          ...                          ...   \n",
       "51                       6.1623                       4.6720   \n",
       "52                       0.0000                       1.5045   \n",
       "53                       1.5229                       0.0000   \n",
       "54                     101.3755                     102.8626   \n",
       "55                     136.7492                     138.2363   \n",
       "\n",
       "    АЗС № 35462 Аксеново  Нефтебаза  \n",
       "0               339.2882   314.2380  \n",
       "1               339.6139   314.5638  \n",
       "2               274.4141   309.3918  \n",
       "3                75.4671    45.6714  \n",
       "4                72.8919    43.0962  \n",
       "..                   ...        ...  \n",
       "51              107.2118   142.1894  \n",
       "52              101.2218   136.1995  \n",
       "53              102.5723   137.5500  \n",
       "54                0.0000    35.0674  \n",
       "55               35.4634     0.0000  \n",
       "\n",
       "[56 rows x 56 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#remove locations, which cannot be served in 12 hours (driver can't get there and come back in 12 hours)\n",
    "to_remove = ((2 * (df.values[-1,:] / truck_speed) < working_hours) == False).nonzero()[0]\n",
    "df = df.drop(df.index[to_remove])\n",
    "df = df.drop(df.columns[to_remove], axis=1)\n",
    "df = df.reset_index(drop=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "23457569",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>АЗС №35448 Водников</th>\n",
       "      <th>АЗС №35449 Нелазское</th>\n",
       "      <th>АЗС №35450 Кирилловское шоссе-1</th>\n",
       "      <th>АЗС №35451 Кирилловское шоссе-2</th>\n",
       "      <th>АЗС №35452 Металлургов</th>\n",
       "      <th>АЗС №35453 Рыбинская</th>\n",
       "      <th>АЗС №35454 Октябрьский пр.-1 (Вологда)</th>\n",
       "      <th>АЗС №35455 Октябрьский пр.-2 (Вологда)</th>\n",
       "      <th>АЗС №35456 Маяковская</th>\n",
       "      <th>АЗС №35457 Краснодонцев</th>\n",
       "      <th>АЗС №35458 Северсталь</th>\n",
       "      <th>АЗС №35459 Олимпийская</th>\n",
       "      <th>АЗС №35460 Северное шоссе-1</th>\n",
       "      <th>АЗС №35461 Северное шоссе-2</th>\n",
       "      <th>АЗС № 35462 Аксеново</th>\n",
       "      <th>Нефтебаза</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>0.0000</td>\n",
       "      <td>143.2323</td>\n",
       "      <td>136.4037</td>\n",
       "      <td>135.6752</td>\n",
       "      <td>140.5002</td>\n",
       "      <td>135.4592</td>\n",
       "      <td>141.8139</td>\n",
       "      <td>141.7280</td>\n",
       "      <td>138.7535</td>\n",
       "      <td>140.4832</td>\n",
       "      <td>142.5104</td>\n",
       "      <td>142.4857</td>\n",
       "      <td>135.6937</td>\n",
       "      <td>137.1807</td>\n",
       "      <td>34.4078</td>\n",
       "      <td>5.5894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>143.0111</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>18.7120</td>\n",
       "      <td>19.3586</td>\n",
       "      <td>18.2921</td>\n",
       "      <td>24.1948</td>\n",
       "      <td>21.6629</td>\n",
       "      <td>21.5771</td>\n",
       "      <td>18.9999</td>\n",
       "      <td>22.5964</td>\n",
       "      <td>17.9030</td>\n",
       "      <td>25.3921</td>\n",
       "      <td>19.3574</td>\n",
       "      <td>20.8445</td>\n",
       "      <td>108.8800</td>\n",
       "      <td>143.8577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>135.3177</td>\n",
       "      <td>19.5766</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.6986</td>\n",
       "      <td>5.5236</td>\n",
       "      <td>9.3692</td>\n",
       "      <td>6.8373</td>\n",
       "      <td>6.7514</td>\n",
       "      <td>3.7770</td>\n",
       "      <td>5.4870</td>\n",
       "      <td>7.5339</td>\n",
       "      <td>7.4895</td>\n",
       "      <td>0.6975</td>\n",
       "      <td>2.1845</td>\n",
       "      <td>101.1866</td>\n",
       "      <td>136.1642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>136.0141</td>\n",
       "      <td>18.8979</td>\n",
       "      <td>0.7484</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4.8449</td>\n",
       "      <td>8.6905</td>\n",
       "      <td>6.1586</td>\n",
       "      <td>6.0727</td>\n",
       "      <td>3.0983</td>\n",
       "      <td>4.6329</td>\n",
       "      <td>6.8552</td>\n",
       "      <td>7.4285</td>\n",
       "      <td>1.3938</td>\n",
       "      <td>2.8809</td>\n",
       "      <td>101.8830</td>\n",
       "      <td>136.8606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>140.0989</td>\n",
       "      <td>18.1506</td>\n",
       "      <td>4.8332</td>\n",
       "      <td>5.4798</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>7.2829</td>\n",
       "      <td>4.7510</td>\n",
       "      <td>4.6651</td>\n",
       "      <td>1.8555</td>\n",
       "      <td>6.0127</td>\n",
       "      <td>2.4322</td>\n",
       "      <td>8.8084</td>\n",
       "      <td>5.4786</td>\n",
       "      <td>6.9657</td>\n",
       "      <td>105.9678</td>\n",
       "      <td>140.9454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>141.3429</td>\n",
       "      <td>25.7787</td>\n",
       "      <td>7.4471</td>\n",
       "      <td>6.7238</td>\n",
       "      <td>8.8138</td>\n",
       "      <td>12.6594</td>\n",
       "      <td>10.1276</td>\n",
       "      <td>10.0417</td>\n",
       "      <td>7.2967</td>\n",
       "      <td>3.3719</td>\n",
       "      <td>10.8241</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6.1623</td>\n",
       "      <td>4.6720</td>\n",
       "      <td>107.2118</td>\n",
       "      <td>142.1894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>135.3530</td>\n",
       "      <td>19.6118</td>\n",
       "      <td>1.4624</td>\n",
       "      <td>0.7339</td>\n",
       "      <td>5.5588</td>\n",
       "      <td>9.4044</td>\n",
       "      <td>6.8726</td>\n",
       "      <td>6.7867</td>\n",
       "      <td>3.8122</td>\n",
       "      <td>4.8070</td>\n",
       "      <td>7.5691</td>\n",
       "      <td>6.8095</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.5045</td>\n",
       "      <td>101.2218</td>\n",
       "      <td>136.1995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>136.7034</td>\n",
       "      <td>20.9623</td>\n",
       "      <td>2.8129</td>\n",
       "      <td>2.0844</td>\n",
       "      <td>6.9093</td>\n",
       "      <td>10.7549</td>\n",
       "      <td>8.2230</td>\n",
       "      <td>8.1372</td>\n",
       "      <td>5.1627</td>\n",
       "      <td>3.5396</td>\n",
       "      <td>8.9196</td>\n",
       "      <td>5.5422</td>\n",
       "      <td>1.5229</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>102.5723</td>\n",
       "      <td>137.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>34.2209</td>\n",
       "      <td>108.9142</td>\n",
       "      <td>102.0856</td>\n",
       "      <td>101.3571</td>\n",
       "      <td>106.1820</td>\n",
       "      <td>101.1411</td>\n",
       "      <td>107.4957</td>\n",
       "      <td>107.4099</td>\n",
       "      <td>104.4354</td>\n",
       "      <td>106.1650</td>\n",
       "      <td>108.1923</td>\n",
       "      <td>108.1676</td>\n",
       "      <td>101.3755</td>\n",
       "      <td>102.8626</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>35.0674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>6.1825</td>\n",
       "      <td>144.2879</td>\n",
       "      <td>137.4593</td>\n",
       "      <td>136.7308</td>\n",
       "      <td>141.5557</td>\n",
       "      <td>136.5147</td>\n",
       "      <td>142.8694</td>\n",
       "      <td>142.7836</td>\n",
       "      <td>139.8091</td>\n",
       "      <td>141.5387</td>\n",
       "      <td>143.5660</td>\n",
       "      <td>143.5413</td>\n",
       "      <td>136.7492</td>\n",
       "      <td>138.2363</td>\n",
       "      <td>35.4634</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    АЗС №35448 Водников  АЗС №35449 Нелазское  \\\n",
       "40               0.0000              143.2323   \n",
       "41             143.0111                0.0000   \n",
       "42             135.3177               19.5766   \n",
       "43             136.0141               18.8979   \n",
       "44             140.0989               18.1506   \n",
       "..                  ...                   ...   \n",
       "51             141.3429               25.7787   \n",
       "52             135.3530               19.6118   \n",
       "53             136.7034               20.9623   \n",
       "54              34.2209              108.9142   \n",
       "55               6.1825              144.2879   \n",
       "\n",
       "    АЗС №35450 Кирилловское шоссе-1  АЗС №35451 Кирилловское шоссе-2  \\\n",
       "40                         136.4037                         135.6752   \n",
       "41                          18.7120                          19.3586   \n",
       "42                           0.0000                           0.6986   \n",
       "43                           0.7484                           0.0000   \n",
       "44                           4.8332                           5.4798   \n",
       "..                              ...                              ...   \n",
       "51                           7.4471                           6.7238   \n",
       "52                           1.4624                           0.7339   \n",
       "53                           2.8129                           2.0844   \n",
       "54                         102.0856                         101.3571   \n",
       "55                         137.4593                         136.7308   \n",
       "\n",
       "    АЗС №35452 Металлургов  АЗС №35453 Рыбинская  \\\n",
       "40                140.5002              135.4592   \n",
       "41                 18.2921               24.1948   \n",
       "42                  5.5236                9.3692   \n",
       "43                  4.8449                8.6905   \n",
       "44                  0.0000                7.2829   \n",
       "..                     ...                   ...   \n",
       "51                  8.8138               12.6594   \n",
       "52                  5.5588                9.4044   \n",
       "53                  6.9093               10.7549   \n",
       "54                106.1820              101.1411   \n",
       "55                141.5557              136.5147   \n",
       "\n",
       "    АЗС №35454 Октябрьский пр.-1 (Вологда)  \\\n",
       "40                                141.8139   \n",
       "41                                 21.6629   \n",
       "42                                  6.8373   \n",
       "43                                  6.1586   \n",
       "44                                  4.7510   \n",
       "..                                     ...   \n",
       "51                                 10.1276   \n",
       "52                                  6.8726   \n",
       "53                                  8.2230   \n",
       "54                                107.4957   \n",
       "55                                142.8694   \n",
       "\n",
       "    АЗС №35455 Октябрьский пр.-2 (Вологда)  АЗС №35456 Маяковская  \\\n",
       "40                                141.7280               138.7535   \n",
       "41                                 21.5771                18.9999   \n",
       "42                                  6.7514                 3.7770   \n",
       "43                                  6.0727                 3.0983   \n",
       "44                                  4.6651                 1.8555   \n",
       "..                                     ...                    ...   \n",
       "51                                 10.0417                 7.2967   \n",
       "52                                  6.7867                 3.8122   \n",
       "53                                  8.1372                 5.1627   \n",
       "54                                107.4099               104.4354   \n",
       "55                                142.7836               139.8091   \n",
       "\n",
       "    АЗС №35457 Краснодонцев  АЗС №35458 Северсталь  АЗС №35459 Олимпийская  \\\n",
       "40                 140.4832               142.5104                142.4857   \n",
       "41                  22.5964                17.9030                 25.3921   \n",
       "42                   5.4870                 7.5339                  7.4895   \n",
       "43                   4.6329                 6.8552                  7.4285   \n",
       "44                   6.0127                 2.4322                  8.8084   \n",
       "..                      ...                    ...                     ...   \n",
       "51                   3.3719                10.8241                  0.0000   \n",
       "52                   4.8070                 7.5691                  6.8095   \n",
       "53                   3.5396                 8.9196                  5.5422   \n",
       "54                 106.1650               108.1923                108.1676   \n",
       "55                 141.5387               143.5660                143.5413   \n",
       "\n",
       "    АЗС №35460 Северное шоссе-1  АЗС №35461 Северное шоссе-2  \\\n",
       "40                     135.6937                     137.1807   \n",
       "41                      19.3574                      20.8445   \n",
       "42                       0.6975                       2.1845   \n",
       "43                       1.3938                       2.8809   \n",
       "44                       5.4786                       6.9657   \n",
       "..                          ...                          ...   \n",
       "51                       6.1623                       4.6720   \n",
       "52                       0.0000                       1.5045   \n",
       "53                       1.5229                       0.0000   \n",
       "54                     101.3755                     102.8626   \n",
       "55                     136.7492                     138.2363   \n",
       "\n",
       "    АЗС № 35462 Аксеново  Нефтебаза  \n",
       "40               34.4078     5.5894  \n",
       "41              108.8800   143.8577  \n",
       "42              101.1866   136.1642  \n",
       "43              101.8830   136.8606  \n",
       "44              105.9678   140.9454  \n",
       "..                   ...        ...  \n",
       "51              107.2118   142.1894  \n",
       "52              101.2218   136.1995  \n",
       "53              102.5723   137.5500  \n",
       "54                0.0000    35.0674  \n",
       "55               35.4634     0.0000  \n",
       "\n",
       "[16 rows x 16 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from numpy.random import default_rng\n",
    "\n",
    "#shrink array\n",
    "df = df.iloc[40:56,40:56]\n",
    "#rng = default_rng()\n",
    "# idx = rng.choice(len(df.values[0])-1, size=len(df.values[0]) - 1 - 10, replace=False)\n",
    "# df = df.drop(df.index[idx])\n",
    "# df = df.drop(df.columns[idx], axis=1)\n",
    "#df = df.reset_index(drop=True)\n",
    "N = len(df.values[0])\n",
    "print(N)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f4061a3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import networkx as nx\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "G = nx.from_numpy_matrix(df.values, create_using=nx.DiGraph)\n",
    "nx.draw(G, with_labels = True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "febee365",
   "metadata": {},
   "outputs": [],
   "source": [
    "#custom gym environment for our problem\n",
    "m = 5\n",
    "N = len(df.values[0])\n",
    "working_hours = 12\n",
    "truck_speed = 60\n",
    "\n",
    "class TransportScape(Env):\n",
    "    def __init__(self, env_config):\n",
    "        self.num_of_trucks = m\n",
    "        self.num_of_locations = N\n",
    "        self.h = working_hours #working hours of each truck driver\n",
    "        self.speed = truck_speed\n",
    "        self.distances = df.values #an array, containing distances between locations\n",
    "    \n",
    "        self.action_space = spaces.MultiDiscrete([self.num_of_trucks, self.num_of_locations - 1])\n",
    "    \n",
    "        self.observation_space = spaces.Dict(\n",
    "        {\n",
    "            #x_i - shows each truck's location\n",
    "            'truck location': spaces.MultiDiscrete(np.full(self.num_of_trucks, self.num_of_locations)),\n",
    "            #p_j - shows whether a truck is assigned to this particular location or not\n",
    "            'assignment': spaces.MultiBinary(self.num_of_locations - 1), \n",
    "            #u_i - shows whether a particular truck was used before\n",
    "            'truck usage': spaces.MultiBinary(self.num_of_trucks),\n",
    "            #delta_i - shows how much time each truck has left until the end of the work day\n",
    "            'time left': spaces.Box(low=np.zeros(self.num_of_trucks), high=np.full(self.num_of_trucks, self.h), dtype=np.float64)\n",
    "        })\n",
    "        self.reset()\n",
    "        \n",
    "    def nice_print(self):\n",
    "        print(\"Truck Location\")\n",
    "        print(self.state['truck location'])\n",
    "        print(\"Assignment\")\n",
    "        print(self.state['assignment'])\n",
    "        print(\"Truck Usage\")\n",
    "        print(self.state['truck usage'])\n",
    "        print(\"Time Left\")\n",
    "        print(self.state['time left'])\n",
    "        \n",
    "    def reset(self):\n",
    "        self.state = {'truck location': np.full(self.num_of_trucks, self.num_of_locations - 1),\n",
    "                      'assignment': np.zeros(self.num_of_locations - 1),\n",
    "                      'truck usage': np.zeros(self.num_of_trucks),\n",
    "                      'time left': np.full(self.num_of_trucks, self.h)}\n",
    "        self.done = False\n",
    "        return self.state \n",
    "    \n",
    "    def step(self, action):\n",
    "        i, j = action[0], action[1]\n",
    "        truck_loc = self.state['truck location']\n",
    "        assignment = self.state['assignment']\n",
    "        truck_use = self.state['truck usage']\n",
    "        time_left = self.state['time left']\n",
    "        \n",
    "        #if a truck is already assigned to this location - penalty\n",
    "        if assignment[j] == 1:\n",
    "            self.reward = -6000\n",
    "        #if no time left - penalty\n",
    "        elif (time_left[i] - self.distances[truck_loc[i], j] / self.speed - self.distances[j, -1] / self.speed) < 0:\n",
    "            self.reward = -6000\n",
    "        #else - assign truck to a new location\n",
    "        else:\n",
    "            self.reward = 0\n",
    "            #print(\"else\")\n",
    "            #if needs to use an unused before truck - penalty\n",
    "            if truck_use[i] == 0:\n",
    "                self.reward = -2000\n",
    "                truck_use[i] = 1\n",
    "            assignment[j] = 1\n",
    "            self.reward -= self.distances[truck_loc[i], j]\n",
    "            time_left[i] -= self.distances[truck_loc[i], j] / self.speed - 0.5\n",
    "            truck_loc[i] = j\n",
    "        #if all locations have trucks assigned to them - end episode\n",
    "        if np.all(assignment == 1):\n",
    "            self.done = True\n",
    "        else:\n",
    "            self.done = False\n",
    "        \n",
    "        self.state['truck location'] = truck_loc\n",
    "        self.state['assignment'] = assignment\n",
    "        self.state['truck usage'] = truck_use\n",
    "        self.state['time left'] = time_left\n",
    "        \n",
    "        return self.state, self.reward, self.done, {}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1e532a0d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "config = ppo.DEFAULT_CONFIG.copy()\n",
    "config[\"num_workers\"] = 8\n",
    "config[\"framework\"] = \"torch\"\n",
    "#config['num_cpus_per_worker'] = 2  # This avoids running out of resources in the notebook environment when this cell is re-executed\n",
    "config['kl_coeff'] = 0.0 #можно поменять\n",
    "config[\"log_level\"] = \"ERROR\"\n",
    "config[\"env_config\"] = {}\n",
    "config[\"clip_param\"] = 0.3\n",
    "config[\"entropy_coeff\"] = 0.01\n",
    "config['lr'] = 0.0001"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c398ef1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-01 04:15:23,918\tINFO services.py:1456 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "RayContext(dashboard_url='127.0.0.1:8265', python_version='3.8.13', ray_version='1.12.0', ray_commit='f18fc31c7562990955556899090f8e8656b48d2d', address_info={'node_ip_address': '192.168.1.72', 'raylet_ip_address': '192.168.1.72', 'redis_address': None, 'object_store_address': '/tmp/ray/session_2022-06-01_04-15-21_633351_5777/sockets/plasma_store', 'raylet_socket_name': '/tmp/ray/session_2022-06-01_04-15-21_633351_5777/sockets/raylet', 'webui_url': '127.0.0.1:8265', 'session_dir': '/tmp/ray/session_2022-06-01_04-15-21_633351_5777', 'metrics_export_port': 56730, 'gcs_address': '192.168.1.72:56876', 'address': '192.168.1.72:56876', 'node_id': '8a577fd48a7e98def79adef261e169efa3ca366ef3e968dd29aebd0f'})"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ray.shutdown()\n",
    "ray.init()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b9a32ce2",
   "metadata": {},
   "outputs": [],
   "source": [
    "agent = ppo.PPOTrainer(config=config, env=TransportScape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "af7a726d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2022-06-01 04:15:32.641601\n",
      "i:  0\n",
      "mean episode length: 51.80821917808219\n",
      "max episode reward: -92994.9991\n",
      "mean episode reward: -231498.15343698635\n",
      "min episode reward: -754877.5726000001\n",
      "total episodes: 73\n",
      "i:  10\n",
      "mean episode length: 33.541666666666664\n",
      "max episode reward: -23156.8661\n",
      "mean episode reward: -121600.29506416667\n",
      "min episode reward: -800912.2097\n",
      "total episodes: 1055\n",
      "i:  20\n",
      "mean episode length: 17.064102564102566\n",
      "max episode reward: -8636.218700000001\n",
      "mean episode reward: -22866.09287478632\n",
      "min episode reward: -82968.08830000002\n",
      "total episodes: 2917\n",
      "i:  30\n",
      "mean episode length: 15.209125475285171\n",
      "max episode reward: -6423.681600000001\n",
      "mean episode reward: -10618.43168973384\n",
      "min episode reward: -35249.57809999999\n",
      "total episodes: 5504\n",
      "i:  40\n",
      "mean episode length: 15.109848484848484\n",
      "max episode reward: -4279.912200000001\n",
      "mean episode reward: -7225.635179924242\n",
      "min episode reward: -23153.509400000003\n",
      "total episodes: 8142\n",
      "i:  50\n",
      "mean episode length: 15.102272727272727\n",
      "max episode reward: -2227.8658\n",
      "mean episode reward: -5525.614687121212\n",
      "min episode reward: -28846.608499999995\n",
      "total episodes: 10791\n",
      "i:  60\n",
      "mean episode length: 15.312977099236642\n",
      "max episode reward: -2241.6482\n",
      "mean episode reward: -5285.228401526718\n",
      "min episode reward: -166717.4735\n",
      "total episodes: 13276\n",
      "i:  70\n",
      "mean episode length: 15.269662921348315\n",
      "max episode reward: -2221.7918999999993\n",
      "mean episode reward: -4795.225677153558\n",
      "min episode reward: -306887.2662\n",
      "total episodes: 15845\n",
      "i:  80\n",
      "mean episode length: 15.079245283018867\n",
      "max episode reward: -2232.4081\n",
      "mean episode reward: -3043.7525728301894\n",
      "min episode reward: -94750.4603\n",
      "total episodes: 18481\n",
      "i:  90\n",
      "mean episode length: 15.026119402985074\n",
      "max episode reward: -2228.8636000000006\n",
      "mean episode reward: -2664.0566776119404\n",
      "min episode reward: -18876.4058\n",
      "total episodes: 21138\n",
      "i:  100\n",
      "mean episode length: 15.029850746268657\n",
      "max episode reward: -2346.467400000001\n",
      "mean episode reward: -2594.684814925374\n",
      "min episode reward: -8412.801500000001\n",
      "total episodes: 23735\n",
      "2022-06-01 04:33:03.370924\n",
      "Total Hours:  0.2918692563888889\n"
     ]
    }
   ],
   "source": [
    "import datetime\n",
    "start = datetime.datetime.now()\n",
    "print(start)\n",
    "\n",
    "for i in range(101):\n",
    "    result = agent.train()\n",
    "    if i % 10 == 0:\n",
    "        print('i: ', i)\n",
    "        print('mean episode length:', result['episode_len_mean'])\n",
    "        print('max episode reward:', result['episode_reward_max'])\n",
    "        print('mean episode reward:', result['episode_reward_mean'])\n",
    "        print('min episode reward:', result['episode_reward_min'])\n",
    "        print('total episodes:', result['episodes_total'])\n",
    "        checkpoint = agent.save()\n",
    "finish = datetime.datetime.now()\n",
    "print(finish)\n",
    "duration = finish - start\n",
    "print(\"Total Hours: \", duration.total_seconds() / 3600)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "8d7f55bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "action: [1 5]; reward: 0\n",
      "action: [1 7]; reward: -2136.5147\n",
      "action: [ 1 11]; reward: -4.0806\n",
      "action: [1 6]; reward: -9.806299999999998\n",
      "action: [1 8]; reward: -10.127600000000001\n",
      "action: [1 9]; reward: -4.5775\n",
      "action: [1 4]; reward: -4.5237\n",
      "action: [ 4 10]; reward: -5.7318999999999996\n",
      "action: [4 1]; reward: -2143.566\n",
      "action: [ 4 12]; reward: -18.097\n",
      "action: [4 3]; reward: -19.357400000000002\n",
      "action: [ 4 13]; reward: -0.7339\n",
      "action: [4 2]; reward: -2.8809\n",
      "action: [4 0]; reward: -2.8129\n",
      "action: [ 4 14]; reward: -135.3177\n",
      "Final state:\n",
      "Assignment: [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n",
      "Trucks used: [0. 1. 0. 0. 1.]\n",
      "Time left [12 10 12 12  7]\n",
      "-4532.535899999999\n"
     ]
    }
   ],
   "source": [
    "env = TransportScape(config)\n",
    "state = env.reset()\n",
    "g = 0\n",
    "done = False\n",
    "reward = 0\n",
    "actions = []\n",
    "i = 0\n",
    "while not done:\n",
    "    action = agent.compute_action(state, explore = False)\n",
    "    actions.append(action)\n",
    "    print(\"action: {:}; reward: {:}\".format(action, reward))\n",
    "    state, reward, done, info = env.step(action)\n",
    "    g += reward\n",
    "    i += 1\n",
    "    if i == 1000:\n",
    "        break\n",
    "print(\"Final state:\")\n",
    "print(\"Assignment:\", state['assignment'])\n",
    "print(\"Trucks used:\", state['truck usage'])\n",
    "print(\"Time left\", state['time left'])\n",
    "print(g) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a8ae866f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Truck #1: [5, 7, 11, 6, 8, 9, 4]\n",
      "Truck #4: [10, 1, 12, 3, 13, 2, 0, 14]\n"
     ]
    }
   ],
   "source": [
    "truck_paths = {}\n",
    "for k, v in actions:\n",
    "    truck_paths.setdefault(k,[]).append(v)\n",
    "for k in truck_paths:\n",
    "    print(\"Truck #{:}: {:}\".format(k,truck_paths[k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1100e554",
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetLength(route):\n",
    "    length = df.values[-1, route[0]]\n",
    "    for i in range(1, len(route)):\n",
    "        length += df.values[route[i-1], route[i]]\n",
    "    length += df.values[route[-1], -1]\n",
    "    \n",
    "    return length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "fb785c73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "708.5487"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dist = 0\n",
    "for k in truck_paths:\n",
    "    dist += GetLength(truck_paths[k])\n",
    "dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "abe9656f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
